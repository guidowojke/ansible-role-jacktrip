---
name: CI
'on':
  pull_request:
  push:
    branches:
      - develop
  schedule:
    - cron: "0 7 * * 0"

defaults:
  run:
    working-directory: 'guidowojke.jacktrip'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'guidowojke.jacktrip'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible-lint

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - ubuntu1804
          - ubuntu2004

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'guidowojke.jacktrip'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule[docker] docker

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  maven:
    name: maven build
    runs-on: ubuntu-latest

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'guidowojke.jacktrip'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: mvn --file pom.xml --batch-mode clean verify

      - name: create staging folder and safe artifacts
        run: mkdir staging && cp target/*.jar staging

      - name: store build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
